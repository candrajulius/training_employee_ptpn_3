plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

ext.majorVersion = 1
ext.minorVersion = 0
ext.patchVersion = 0
ext.preRelease = "alpha"
ext.minSdkVersion = 21

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.candra.ptpn_employee_training"
        minSdk project.ext.minSdkVersion
        targetSdk 32
        versionCode generateVersionCode()
        versionName genereteVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

private Integer generateVersionCode(){
    return ext.minSdkVersion * 10000000 + ext.majorVersion * 10000 + ext.minorVersion * 100
}

private String genereteVersionName(){
    String versionName = "${ext.majorVersion}.${ext.minorVersion}.${ext.patchVersion}"
    if (ext.preRelease != null && !ext.preRelease.isEmpty()) {
        versionName = versionName + "-" + ext.preRelease
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Room Database
    def roomDatabaseVersion = "2.4.2"
    implementation "androidx.room:room-runtime:$roomDatabaseVersion"
    kapt "androidx.room:room-compiler:$roomDatabaseVersion"
    implementation "androidx.room:room-ktx:$roomDatabaseVersion"

    // lifecycle viewModel
    def lifecycleViewModelVersion = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleViewModelVersion"

    // Lifecycle live data
    def lifecycleLiveDataVersion = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleLiveDataVersion"

    // Aktivity ktx
    def activityKTX = "1.4.0"
    implementation "androidx.activity:activity-ktx:$activityKTX"

    // Dagger Hilt
    implementation("com.google.dagger:hilt-android:2.41")
    kapt("com.google.dagger:hilt-android-compiler:2.39.1")

    // Coroutines
    def kotlin_coroutines_version = "1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Fragment KTX
    def fragmentKTX = "1.4.1"
    implementation "androidx.fragment:fragment-ktx:$fragmentKTX"
}